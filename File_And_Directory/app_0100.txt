# **************************************************
# https://docs.python.org/3/tutorial/inputoutput.html
# https://docs.python.org/3/library/functions.html#open
# https://www.programiz.com/python-programming/file-operation
# https://www.linkedin.com/pulse/python-osopen-vs-built-in-open-nelson-ateya/
# https://stackoverflow.com/questions/15039528/what-is-the-difference-between-os-open-and-os-fdopen-in-python/15039662
# **************************************************
# In Python 2, the built-in open and io.open were different
# (io.open was newer and supported more things). In Python 3,
# open and io.open are now the same thing (they got rid of
# the old built-in open), so you should always use open.
# Code that needs to be compatible with Python 2 and 3
# might have a reason to use io.open.
#
# So os.open() is the default opener for open(),
# and we also have the ability to specify a custom wrapper
# around it if file flags or mode need to be changed
#
# In short, open() creates new file objects, os.open()
# creates OS-level file descriptors, and os.fdopen()
# creates a file object out of a file descriptor.
# **************************************************

# **************************************************
# 'r'	open for reading (default)
# 'w'	open for writing, truncating the file first
# 'x'	open for exclusive creation, failing if the file already exists
# 'a'	open for writing, appending to the end of file if it exists
# '+'	open for updating (reading and writing)
#
# 'b'	binary mode
# 't'	text mode (default)
# **************************************************

# **************************************************
# r     rt      rb
# w     wt      wb
# a     at      ab
# **************************************************
